# GraphQL schema example
#
# https://gqlgen.com/getting-started/

directive @goField(forceResolver: Boolean, name: String) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION

directive @auth on FIELD_DEFINITION

scalar Any

type Job {
  id: ID!
  text: String!
  description: String!
  isArchived: Boolean!
  isDeleted: Boolean!
  tags: String
  skills: String
  deadlineDate: String
  isPermanent: Boolean
  isContract: Boolean
  contractDuration: String
  salary: String
  experience: String
  domain: String
  education: String
  gender: String
  user: User
}

input NewJob {
  text: String!
  description: String!
  tags: String
  skills: String
  deadlineDate: String
  isPermanent: Boolean
  isContract: Boolean
  contractDuration: String
  salary: String
  experience: String
  domain: String
  education: String
  gender: String
  userId: String
}

type User {
  id: ID!
  name: String!
  email: String!
  firstName: String
  lastName: String
  mobile: String
  isLocked: Boolean
}

input NewUser {
  name: String!
  email: String!
  password: String!
  firstName: String
  lastName: String
  mobile: String
}

type AuthOps {
  login(email: String!, password: String!): Any! @goField(forceResolver: true)
  register(input: NewUser!): Any! @goField(forceResolver: true)
}

type Query {
  jobs: [Job!]!
  user(id: ID!): User! @goField(forceResolver: true)

  # Add Protected Resource
  protected: String! @goField(forceResolver: true) @auth
}

type Mutation {
  createJob(input: NewJob!): Job!
  auth: AuthOps! @goField(forceResolver: true)
}
