package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.22

import (
	"context"
	"fmt"

	"github.com/abhayshiro/golang-graphql/graph/model"
)

// CreateJob is the resolver for the createJob field.
func (r *mutationResolver) CreateJob(ctx context.Context, input model.NewJob) (*model.Job, error) {
	job := model.Job{
		Text:        input.Text,
		Description: input.Description,
		Tags:        input.Tags,
		Skills:      input.Skills,
	}

	_, err := r.DB.Model(&job).Insert()
	if err != nil {
		return nil, fmt.Errorf("Error creating a new job")
	}

	return &job, nil
}

// Jobs is the resolver for the jobs field.
func (r *queryResolver) Jobs(ctx context.Context) ([]*model.Job, error) {
	var jobs []*model.Job

	err := r.DB.Model(&jobs).Select()
	if err != nil {
		return nil, err
	}

	return jobs, nil
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
